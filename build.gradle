import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven {
        url "https://cursemaven.com"
        content { includeGroup "curse.maven" }
    }
    maven {
        url "https://api.modrinth.com/maven"
        content { includeGroup "maven.modrinth" }
    }
    maven {
        url "https://maven.saps.dev/minecraft"
        content {includeGroup "dev.latvian.mods"}
    }
    maven { url "https://maven.architectury.dev/" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {

    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    modImplementation("net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    //KubeJS
    /*modImplementation("dev.latvian.mods:kubejs-fabric:1605.3.19-build.422") {
        exclude(module: "fabric-api")
        exclude(module: "fabric-loader")
    }*/

    //REI
    modImplementation("me.shedaniel:RoughlyEnoughItems:5.12.385") {
        exclude(module: "fabric-api")
        exclude(module: "fabric-loader")
    }

    //TechReborn
    modImplementation("RebornCore:RebornCore-1.16:+") {
        exclude(module: "fabric-api")
        exclude(module: "fabric-loader")
    }

    modImplementation("TechReborn:TechReborn-1.16:+") {
        exclude(module: "energy")
        exclude(module: "fabric-api")
        exclude(module: "fabric-loader")
        exclude(module: "RebornCore-1.16")
    }

}

loom {

    accessWidenerPath = file("src/main/resources/ht_materials.accesswidener")

    runs {
        client {
            vmArg("-Dmixin.debug.export=true")
        }
    }

}

processResources {

    inputs.property "version", version
    inputs.property "minecraft_version", minecraft_version
    inputs.property "loader_version", loader_version
    inputs.property "fabric_kotlin_version", fabric_kotlin_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": version,
                "minecraft_version": minecraft_version,
                "loader_version": loader_version,
                "fabric_kotlin_version": fabric_kotlin_version
    }

}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 16
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = 16
    }
    compilerOptions {
        freeCompilerArgs.add("-Xjvm-default=all")
    }
}

java {
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}